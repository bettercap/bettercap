name: Build and Deploy

on:
  push:
    tags:
      - 'v*.*.*'    # Match version tags
  workflow_dispatch:      

jobs:
  build:
    name: ${{ matrix.os.pretty }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      matrix:
        os:
          - name: darwin
            runs-on: [macos-latest]
            pretty: üçé macOS
          - name: linux
            runs-on: [ubuntu-latest]
            pretty: üêß Linux
          - name: windows
            runs-on: [windows-latest]
            pretty: ü™ü Windows
            output: bettercap.exe
        arch: [amd64, arm64]
        go: [1.24.x]
        exclude:
          - os:
              name: darwin
            arch: amd64
          # Linux ARM64 images are not yet publicly available (https://github.com/actions/runner-images)
          - os:
              name: linux
            arch: arm64
          - os:
              name: windows
            arch: arm64

    env:
      OUTPUT: ${{ matrix.os.output || 'bettercap' }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Install Dependencies
      if: ${{ matrix.os.name == 'linux' }}
      run: sudo apt-get update && sudo apt-get install -y p7zip-full libpcap-dev libnetfilter-queue-dev libusb-1.0-0-dev

    - name: Install Dependencies (macOS)
      if: ${{ matrix.os.name == 'macos' }}
      run: brew install libpcap libusb p7zip

    - name: Install libusb via mingw (Windows)
      if: ${{ matrix.os.name == 'windows' }}
      uses: msys2/setup-msys2@v2
      with:
        install: |-
          mingw64/mingw-w64-x86_64-libusb
          mingw64/mingw-w64-x86_64-pkg-config

    - name: Install other Dependencies (Windows)
      if: ${{ matrix.os.name == 'windows' }}
      run: |
        choco install openssl.light -y
        choco install make -y
        choco install 7zip -y
        choco install zadig -y
        curl -L "https://www.winpcap.org/install/bin/WpdPack_4_1_2.zip" -o "C:\wpcap-sdk.zip"
        7z x -y "C:\wpcap-sdk.zip" -o"C:\winpcap"
        echo "D:\a\_temp\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Build
      run: make -e TARGET="${{ env.OUTPUT }}"

    - name: Verify Build
      run: |
        file "${{ env.OUTPUT }}"
        openssl dgst -sha256 "${{ env.OUTPUT }}" | tee bettercap_${{ matrix.os.name }}_${{ matrix.arch }}.sha256
        7z a "bettercap_${{ matrix.os.name }}_${{ matrix.arch }}.zip" "${{ env.OUTPUT }}" "bettercap_${{ matrix.os.name }}_${{ matrix.arch }}.sha256"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-${{ matrix.os.name }}-${{ matrix.arch }}
        path: |
          bettercap_*.zip
          bettercap_*.sha256

  deploy:
    needs: [build]
    name: Release
    runs-on: ubuntu-latest
    steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v6
          with:
            pattern: release-artifacts-*
            merge-multiple: true
            path: dist/

        - name: Release Assets
          run: ls -l dist

        - name: Upload Release Assets
          uses: softprops/action-gh-release@v2
          if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
          with:
            files: dist/bettercap_*
    env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
